<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jesse Lima</title>
    <link>https://jaglima.github.io/posts/</link>
    <description>Recent content in Posts on Jesse Lima</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Jesse Lima</copyright>
    <lastBuildDate>Sun, 17 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jaglima.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Provenance of Machine Learning experiments with noWorkflow</title>
      <link>https://jaglima.github.io/posts/2023-09-17-reproducibility_eight/</link>
      <pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-09-17-reproducibility_eight/</guid>
      <description>In many academic and industrial teams involved in Data Science and Machine Learning, we frequently find ourselves starting experiments with minimal structure, basic setups, and a multitude of hypotheses. This initial stage is all about exploration, where our primary goal is to validate if our hypotheses hold.
However, as these experiments progress, they quickly grow in complexity, and managing them becomes challenging. Reproducing a specific trial with its unique setup becomes cumbersome, and handling multiple trials can seem nearly impossible.</description>
    </item>
    
    <item>
      <title>noWorkflow as an experiment management tool</title>
      <link>https://jaglima.github.io/posts/2023-07-15-reproduciblity_seven/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-07-15-reproduciblity_seven/</guid>
      <description>A typical workflow in DS/ML projects is well described by the CRISP-DM [2] and precede phases of deployment and production in the whole lifecycle of DS/ML projects. In the same manner, [[3], [4], [5]], points out that Machine Learning pipelines are composed of well-defined layers (or stages) through its lifecycle. The emergence of IA in real world applications stressed the almost artisanal ways of creating and managing analytical experiments and reinforced that there is room to make things more efficiently.</description>
    </item>
    
    <item>
      <title>noWorkflow as provenance capture tool</title>
      <link>https://jaglima.github.io/posts/2023-06-23-reproducibility_six/</link>
      <pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-06-23-reproducibility_six/</guid>
      <description>MLOps tools, Jupyter Notebooks and noWorkflow
We briefly discussed some MLOps tools that offer provenance in this previous post. We encountered a rich and diverse ecosystem with multiple tools allowing different levels of reproducibility. By levels, we consider i) tools allowing provenance at different stages of a typical experiment and ii) tools that are more suitable for the experimental phases of a project, while others fit better for post-deployment phases.</description>
    </item>
    
    <item>
      <title>Data, Features Scoring and Evaluation provenance</title>
      <link>https://jaglima.github.io/posts/2023-06-15-reproducibility_four/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-06-15-reproducibility_four/</guid>
      <description>Conceptual layers in Machine Learning pipelines.
Going one step further into the real-life provenance questions, a good start is to adopt some terminology to prepare our way.
In Sugimura and Hartl (2018), a modular taxonomy is proposed to address the challenge of reproducible Machine Learning pipelines. According to the authors, a pipeline can be modularized into data, feature, scoring, and evaluation layers. Modularizing the pipeline in this way showed itself a natural mode to pose the problem.</description>
    </item>
    
    <item>
      <title>MLOps Tooling and reproducibility</title>
      <link>https://jaglima.github.io/posts/2023-06-08-reproducibility_five/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-06-08-reproducibility_five/</guid>
      <description>A market overview.
As we discussed in the previous post link here, the Data Science experiments and Machine Learning pipelines are composed of layers or stages that have some resemblance across projects. With the emergence of IA, organizations have been looking for solutions that encompass these steps making MLOps workflow no longer complicated.
Many projects have been initiated to meet the challenges of MLOps. They vary from point solutions to attend just one step in the process to broad scopes, aiming for end-to-end management.</description>
    </item>
    
    <item>
      <title>Irreproducibility sources in ML, reproducibility and provenance</title>
      <link>https://jaglima.github.io/posts/2023-06-02-reproducibility_three/</link>
      <pubDate>Fri, 02 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-06-02-reproducibility_three/</guid>
      <description>Reproducibility and provenance in Machine Learning.
The paper by Gundersen et al. (2022) provides an interesting description of the sources of irreproducibility in Machine Learning. The authors have compiled an extensive list of factors that can lead to irreproducibility in machine learning experiments. According to them, irreproducibility can arise from the following causes:
Study factors: selective tuning, p-hacking, p-fishing, experiment initialization, unsuited experimental design.
Algorithm factors: related to algorithmic questions such as hyperparameter optimization, random weights initialization, batch ordering, etc.</description>
    </item>
    
    <item>
      <title>Reproducibility concepts</title>
      <link>https://jaglima.github.io/posts/2023-05-28-reproducibility_two/</link>
      <pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-05-28-reproducibility_two/</guid>
      <description>In the literature, it is possible to find different references and conceptualizations about reproducibility. Usually, a newcomer tends to use the term &amp;ldquo;reproducibility&amp;rdquo; across different stages of a workflow with different meanings. In these cases, terms like repeatability and replicability come into play.
Lynnerup et al. (2020) disserted about what they called a &amp;ldquo;confused taxonomy&amp;rdquo; that creates &amp;ldquo;confusion on the meaning of repeatability, reproducibility, and replicability, which, in turn, negatively affects the overall development of science.</description>
    </item>
    
    <item>
      <title>Reproducibility and Experiments Workflows</title>
      <link>https://jaglima.github.io/posts/2023-05-24-reproducibility_one/</link>
      <pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2023-05-24-reproducibility_one/</guid>
      <description>This is my first post in a serie about my participation in the 1st Summer of Reproducibility at UCSC, 2023.
Since my early experiences in the field of science, reproducibility has always been essential. The scientific method mandates that any scientific achievement should be replicable by anyone, anywhere, provided they adhere to the same premises. This requirement ensures that there exists a causal relationship between causes and consequences. If a particular implication consistently holds true after being repeatedly subjected to experimentation, it can be considered a scientific truth.</description>
    </item>
    
    <item>
      <title>Essential AWS S3 CLI Command Cheat Sheet</title>
      <link>https://jaglima.github.io/posts/2022-04-10-s3_cli/</link>
      <pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2022-04-10-s3_cli/</guid>
      <description>For my quick reference, I&amp;rsquo;ve created this cheat sheet on managing files in AWS S3 bucket. Here it is:
s3 make bucket (create bucket) aws s3 mb s3://tgsbucket &amp;ndash;region us-west-2
s3 remove bucket aws s3 rb s3://tgsbucket aws s3 rb s3://tgsbucket &amp;ndash;force
s3 ls commands aws s3 ls aws s3 ls s3://tgsbucket aws s3 ls s3://tgsbucket &amp;ndash;recursive aws s3 ls s3://tgsbucket &amp;ndash;recursive &amp;ndash;human-readable &amp;ndash;summarize
s3 cp commands aws s3 cp getdata.</description>
    </item>
    
    <item>
      <title>15 AWS Configure Command Examples</title>
      <link>https://jaglima.github.io/posts/2022-04-03-aws_configure/</link>
      <pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2022-04-03-aws_configure/</guid>
      <description>To use AWS CLI, you need to first make sure your AWS access key credentials are configured properly.
Once you have your AWS access_key_id and secret_access_key, you can either manually add them to the credentials file, or use aws configure command to set it up on your local machine.
This tutorials explains all the options available in aws configure command along with how to manage multiple profiles:
First Time Configuring AWS Credentials â€“ Default Profile ~/.</description>
    </item>
    
    <item>
      <title>Thinking in Bets (part three)</title>
      <link>https://jaglima.github.io/posts/2021-11-16-thinking_in_bets_three/</link>
      <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2021-11-16-thinking_in_bets_three/</guid>
      <description>Scientific thinking consists in avoiding all the illusory aspects of reality to focus on the ground truth, the crude factual reality. And to achieve it, being a poker player or a decision-maker, you must go around all the pitfalls that reality, society, and your ego veil in order to make your life soft and sweet. To avoid it, and go towards the principal point of the book thesis, Mrs. Duck recommends framing your decision analysis like a bet as the definitive turning point to leverage up our decision-making.</description>
    </item>
    
    <item>
      <title>Thinking in Bets (part two)</title>
      <link>https://jaglima.github.io/posts/2021-11-03-thinking_in_bets_two/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2021-11-03-thinking_in_bets_two/</guid>
      <description>In studying (and modeling) decision-making methods for real-world competitive situations, game theorists have identified two very clear distinctions between games. In this essay, we will discuss the differences between such games and freely comment on the ideas from Annie Duke&amp;rsquo;s book &amp;ldquo;Thinking in bets&amp;rdquo; about real-world decision-making.
The problem of learning under uncertainty .
When making decisions, someone must come up with a supporting belief to take their decision. Such belief can come from diverse sources: their experiences, theoretical knowledge, training, intuition, prejudices, or just herd behavior.</description>
    </item>
    
    <item>
      <title>Thinking in Bets (part one)</title>
      <link>https://jaglima.github.io/posts/2021-11-01-thinking_in_bets_one/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/2021-11-01-thinking_in_bets_one/</guid>
      <description>In studying (and modeling) decision-making methods for real-world competitive situations, game theorists have identified two very clear distinctions between games. In this essay, we will discuss the differences between such games and freely comment on the ideas from Annie Duke&amp;rsquo;s book &amp;ldquo;Thinking in bets&amp;rdquo; about real-world decision-making.
.
Complete and incomplete games To illustrate the concept of complete and incomplete information games, let&amp;rsquo;s turn to poker and chess&amp;rsquo;s opposite characteristics.</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://jaglima.github.io/posts/first/</link>
      <pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jaglima.github.io/posts/first/</guid>
      <description>This is my first post __ lets see how it works__</description>
    </item>
    
  </channel>
</rss>
